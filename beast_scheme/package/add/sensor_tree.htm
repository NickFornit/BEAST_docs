<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Дерево сенсоров</title>
  <link rel="stylesheet" href="sys/common.css">
</head>
<body style="margin-left:20px;font-family:arial;font-size:14px;width:1000px;">
<div style="position:relative;height:20px;margin-bottom:20px;">
<a href="../../index.htm"><img src="../../img/home.png" style="position:absolute;top:0;left:0;" title="На главную."></a>
<h1 style='position:absolute;top:-10px;left:50%;transform: translate(-50%, 0);font-size:18px;'>Дерево сенсоров</h1>
</div>
<p>Для формирования вербальных сенсоров Beast есть 2 способа:</p>
<ul>
  <li>вводится объемный текст через специальное окно ввода go/pages/words.php – ускоренный вариант, в основном для тестирования</li>
  <li>при отсылке сообщений через окно пульта «Поcлать сообщение Beastу» – рекомендуемый вариант</li>
</ul>
<p>Формирование сенсоров означает, что из общего внешнего шумового фона были выделены повторяющиеся фрагменты и зафиксированы как примитивы восприятия, которые в дальнейшем будут активироваться на соответствующие фрагменты. То есть уже на первичной стадии восприятия происходит распознавание закономерностей через частотный анализ сигналов. Поэтому Beast прежде чем сформировать новый распознаватель, сохраняет фрагмент-слово во временном массиве tempArr, и только если он повторится более 4 раз, создает из него сенсор.</p>
<p>Из полученных сенсоров-слов формируется второй тип сенсора – фразы, ограниченный длиной не более 6 слов. Таким образом Beast получает возможность уже на рефлекторном уровне реагировать как на отдельные слова, так и на фразы.</p>
<table>
  <tr>
    <td><img src="../../img/SensorTree.png" width="906" height="1091" border="0" alt="Дерево сенсоров"></td>
  </tr>
</table>
<p>Для оптимизации поиска сенсоры представлены в виде древовидной структуры, где для слов первичными узлами являются буквы алфавита и спец. Символы, а для дерева фраз – слова. При такой схеме сенсор представляет собой ветку, где ID конечного узла является уникальным распознавателем сенсора. Связи между узлами позволяют быстро находить производные варианты от начальных фрагментов сенсора, что значительно ускоряет поиск и позволяет получить мягкое распознавание по неполной информации. Например: «привет – приветствую – приветик» имеют общий фрагмент «привет», и если на него есть специфический рефлекс, а на  «приветствую – приветик» нет, то он и активируется потому, что «ствую» и «ик» это продолжение ветвления от ветки-сенсора «привет».</p>